I"><h2 id="-문자열-비교-"><center> 문자열 비교 </center></h2>

<blockquote>
  <p><a href="https://github.com/chanos-dev/blogcode/tree/master/21-0531">Git Source</a></p>
</blockquote>

<hr />

<ul>
  <li>
    <p>C#에서 문자열 비교 시 사용되는 메서드는 크게 2가지이다. op_Equality(==)와 string.Equals이다.</p>
  </li>
  <li>
    <p>string class에는 op_Equality가 재정의 되어있어 문자열 비교 시 <code class="language-plaintext highlighter-rouge">==</code>를 사용하면 내부적으로 string.Equals 메서드를 호출한다.</p>
  </li>
</ul>

<figure>
    <img src="http://localhost:4000/images/posts/2021-05-31/string_equals.png" alt="string_equals" />
    <figcaption>dotPeek - string class</figcaption>
</figure>

<ul>
  <li>
    <p>위와 같은 간단한 메서드는 런타임에서 인라인화되기 때문에 두 메서드는 성능상 크게 차이가 나지 않는다.</p>
  </li>
  <li>
    <p>결과적으로 <code class="language-plaintext highlighter-rouge">==</code>와 <code class="language-plaintext highlighter-rouge">Equals</code>의 성능차이는 크게 없다는 것인데, 코드를 작성할 때 가독성을 생각한다면 <code class="language-plaintext highlighter-rouge">==</code>를 쓰는게 좋을 것 같다.</p>
  </li>
  <li>
    <p>그러나❗ <code class="language-plaintext highlighter-rouge">==</code>와 <code class="language-plaintext highlighter-rouge">Equals</code>의 주의점이 있는데, 바로 string 객체가 object 타입으로 담겼을 때이다.</p>
  </li>
</ul>

<p><img src="http://localhost:4000/images/posts/2021-05-31/variables.png" alt="variables" /></p>

<hr />

<h2 id="reference">Reference</h2>

<p><a href="http://www.simpleisbest.net/archive/2005/08/17/206.aspx" target="_blank">문자열 이야기 (6) Equals와 == 연산자</a></p>
:ET