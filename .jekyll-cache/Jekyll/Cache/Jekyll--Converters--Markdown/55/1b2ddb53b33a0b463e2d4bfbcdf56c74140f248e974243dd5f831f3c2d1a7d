I"{<h2 id="c-typeof-gettype"><center>C# typeof, GetType()</center></h2>

<blockquote>
  <p><a href="https://github.com/chanos-dev/blogcode/tree/master/21-0726">Git Source</a></p>
</blockquote>

<hr />

<p>C#의 모든 형식은 System.Type으로 표현되어있다.</p>

<p>두 가지 방법으로 Type객체를 얻어올 수 있으며 typeof와 GetType()이 있다.</p>

<p>typeof - 아규먼트에 명시된 클래스의 이름의 type을 가져온다.</p>
<ul>
  <li>인스턴스를 생성하지 않고 사용할 수 있다.</li>
  <li>컴파일 시점에 평가된다.</li>
</ul>

<p>GetType() - new 키워드로 생성한 인스턴스의 type을 가져온다.</p>
<ul>
  <li>객체가 인스턴스화된 경우에만 사용할 수 있다.</li>
  <li>런타임 시점에 평가된다.</li>
</ul>

<p>제네릭 타입은 JIT 컴파일러에서 결정이 된다.</p>

<p>e.g) type 사용 및 비교 예시</p>
<div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Program</span>
<span class="p">{</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Parent</span> <span class="n">child</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Child</span><span class="p">();</span>
        <span class="nf">Compare</span><span class="p">(</span><span class="n">child</span><span class="p">);</span>
    <span class="p">}</span> 

    <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Compare</span><span class="p">(</span><span class="n">Parent</span> <span class="n">obj</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Parent</span> <span class="n">newChild</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Child</span><span class="p">();</span>
        <span class="c1">// false</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">obj</span><span class="p">.</span><span class="nf">GetType</span><span class="p">()</span> <span class="p">==</span> <span class="k">typeof</span><span class="p">(</span><span class="n">Parent</span><span class="p">));</span>
        <span class="c1">// true</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">obj</span><span class="p">.</span><span class="nf">GetType</span><span class="p">()</span> <span class="p">==</span> <span class="k">typeof</span><span class="p">(</span><span class="n">Child</span><span class="p">));</span>
        <span class="c1">// true</span>
        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">obj</span><span class="p">.</span><span class="nf">GetType</span><span class="p">()</span> <span class="p">==</span> <span class="n">newChild</span><span class="p">.</span><span class="nf">GetType</span><span class="p">());</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">Parent</span> <span class="p">{</span> <span class="p">}</span>

<span class="k">class</span> <span class="nc">Child</span> <span class="p">:</span> <span class="n">Parent</span> <span class="p">{</span> <span class="p">}</span>
</code></pre></div></div>

<p>Compare 메서드의 파라메터 타입이 Parent여도 메서드 호출 시 아규먼트의 타입은 Child이라는 점.</p>

<p>그로 인해 GetType을 호출하면 생성된 인스턴스의 type과 typeof(Parent)로 비교하면 false로 떨어지는 점을 주의하여 개발하자.</p>
:ET