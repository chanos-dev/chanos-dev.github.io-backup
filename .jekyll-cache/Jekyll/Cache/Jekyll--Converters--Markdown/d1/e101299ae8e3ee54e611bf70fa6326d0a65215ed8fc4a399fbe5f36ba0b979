I"Q5<h2 id="c-ziparchive"><center>[C#] ZipArchive</center></h2>

<blockquote>
  <p><a href="https://github.com/chanos-dev/blogcode/tree/master/21-0416">Git Source</a></p>
</blockquote>

<hr />

<blockquote>
  <p><b> ZipArchive </b> 🐔</p>
</blockquote>

<ul>
  <li>참조
    <ul>
      <li>System.IO.Compression</li>
      <li>System.IO.Compression.FileSystem</li>
    </ul>
  </li>
</ul>

<p>.Net Framework 4.5 부터 압축에 대한 라이브러리가 제공이 되며 이번 포스트에서는 제공되는 라이브러리 중 ZipArchive를 사용한다.</p>

<ul>
  <li>압축하기
    <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">internal</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">CreateZip</span><span class="p">(</span><span class="kt">string</span> <span class="n">contentsFolderPath</span><span class="p">,</span> <span class="kt">string</span> <span class="n">saveZipPath</span><span class="p">,</span> <span class="kt">string</span> <span class="n">extention</span> <span class="p">=</span> <span class="s">"*"</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">if</span> <span class="p">(!</span><span class="n">Directory</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">contentsFolderPath</span><span class="p">))</span>
      <span class="k">throw</span> <span class="k">new</span> <span class="nf">DirectoryNotFoundException</span><span class="p">(</span><span class="s">$"The directory is not found. \n</span><span class="p">{</span><span class="n">contentsFolderPath</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(!</span><span class="n">Directory</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">saveZipPath</span><span class="p">))</span>
      <span class="n">Directory</span><span class="p">.</span><span class="nf">CreateDirectory</span><span class="p">(</span><span class="n">Path</span><span class="p">.</span><span class="nf">GetDirectoryName</span><span class="p">(</span><span class="n">saveZipPath</span><span class="p">));</span>

  <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">fs</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">FileStream</span><span class="p">(</span><span class="n">saveZipPath</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Create</span><span class="p">,</span> <span class="n">FileAccess</span><span class="p">.</span><span class="n">ReadWrite</span><span class="p">))</span>
  <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">za</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">ZipArchive</span><span class="p">(</span><span class="n">fs</span><span class="p">,</span> <span class="n">ZipArchiveMode</span><span class="p">.</span><span class="n">Create</span><span class="p">))</span>
  <span class="p">{</span>
      <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">filePath</span> <span class="k">in</span> <span class="n">Directory</span><span class="p">.</span><span class="nf">EnumerateFiles</span><span class="p">(</span><span class="n">contentsFolderPath</span><span class="p">,</span> <span class="s">$"*.</span><span class="p">{</span><span class="n">extention</span><span class="p">}</span><span class="s">"</span><span class="p">,</span> <span class="n">SearchOption</span><span class="p">.</span><span class="n">AllDirectories</span><span class="p">))</span>
      <span class="p">{</span>
          <span class="k">try</span>
          <span class="p">{</span> 
              <span class="n">za</span><span class="p">.</span><span class="nf">CreateEntryFromFile</span><span class="p">(</span><span class="n">filePath</span><span class="p">,</span> <span class="n">Path</span><span class="p">.</span><span class="nf">GetFileName</span><span class="p">(</span><span class="n">filePath</span><span class="p">));</span>
                                    
              <span class="c1">//var entry = za.CreateEntry(Path.GetFileName(filePath));</span>
              <span class="c1">//using (var es = entry.Open())</span>
              <span class="c1">//using (var writer = new StreamWriter(es))</span>
              <span class="c1">//{</span>
              <span class="c1">//    writer.Write(File.ReadAllText(filePath));</span>
              <span class="c1">//}</span>
          <span class="p">}</span>
          <span class="k">catch</span>
          <span class="p">{</span>
              <span class="k">throw</span><span class="p">;</span>
          <span class="p">}</span>
      <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
    <ul>
      <li>ZipArchive 클래스의 확장세머드인 CreateEntryFromFile 정의
        <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1">// 요약:</span>
  <span class="c1">//     압축 zip 보관 파일에 추가 하 여 파일에 보관 합니다.</span>
  <span class="c1">//</span>
  <span class="c1">// 매개 변수:</span>
  <span class="c1">//   destination:</span>
  <span class="c1">//     Zip 보관 파일을 추가 합니다.</span>
  <span class="c1">//</span>
  <span class="c1">//   sourceFileName:</span>
  <span class="c1">//     보관 파일에 대 한 경로입니다. 상대 경로 또는 절대 경로를 지정할 수 있습니다. 상대 경로는 현재 작업 디렉터리에 상대적으로 해석됩니다.</span>
  <span class="c1">//</span>
  <span class="c1">//   entryName:</span>
  <span class="c1">//     Zip 보관 파일에서 만들 항목의 이름입니다.</span>
  <span class="c1">//</span>
  <span class="c1">// 반환 값:</span>
  <span class="c1">//     Zip 보관 파일에서 새 항목에 대 한 래퍼.</span>
  <span class="c1">// </span>
  <span class="k">public</span> <span class="k">static</span> <span class="n">ZipArchiveEntry</span> <span class="nf">CreateEntryFromFile</span><span class="p">(</span><span class="k">this</span> <span class="n">ZipArchive</span> <span class="n">destination</span><span class="p">,</span> <span class="kt">string</span> <span class="n">sourceFileName</span><span class="p">,</span> <span class="kt">string</span> <span class="n">entryName</span><span class="p">);</span>
</code></pre></div>        </div>
      </li>
      <li>sourceFileName의 contents를 가져와 entryName의 이름으로 ZipArchive entry에 추가하는 것 같다. (주석 구문과 동일한 기능인 듯 하다.)</li>
      <li>주석구문에 ZipArchive 클래스의 인스턴스 메서드인 CreateEntry를 사용하게되면 <code class="language-plaintext highlighter-rouge">빈</code> 항목의 entry가 생성되므로 해당 entry의 stream을 가져와 주석구문처럼 write 해주어야한다. (추가적인 write 없이 해당 파일의 contents만 가져오는 경우면 CreateEntryFromFile를 사용하면 될 것 같다.)</li>
    </ul>
  </li>
  <li>압축 해제하기
    <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">internal</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">ExtractZip</span><span class="p">(</span><span class="kt">string</span> <span class="n">zipPath</span><span class="p">,</span> <span class="kt">string</span> <span class="n">extractFolderPath</span><span class="p">)</span>
<span class="p">{</span>
  <span class="k">if</span> <span class="p">(!</span><span class="n">File</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">zipPath</span><span class="p">))</span>
      <span class="k">throw</span> <span class="k">new</span> <span class="nf">FileNotFoundException</span><span class="p">(</span><span class="s">$"The file is not found. \n</span><span class="p">{</span><span class="n">zipPath</span><span class="p">}</span><span class="s">"</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(!</span><span class="n">Directory</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">extractFolderPath</span><span class="p">))</span>
      <span class="n">Directory</span><span class="p">.</span><span class="nf">CreateDirectory</span><span class="p">(</span><span class="n">Path</span><span class="p">.</span><span class="nf">GetDirectoryName</span><span class="p">(</span><span class="n">extractFolderPath</span><span class="p">));</span>

  <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">zipArchive</span> <span class="p">=</span> <span class="n">ZipFile</span><span class="p">.</span><span class="nf">OpenRead</span><span class="p">(</span><span class="n">zipPath</span><span class="p">))</span>
  <span class="p">{</span>
      <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">zipArchiveEntry</span> <span class="k">in</span> <span class="n">zipArchive</span><span class="p">.</span><span class="n">Entries</span><span class="p">)</span>
      <span class="p">{</span>
          <span class="k">try</span>
          <span class="p">{</span>
              <span class="kt">string</span> <span class="n">folderPath</span> <span class="p">=</span> <span class="n">Path</span><span class="p">.</span><span class="nf">GetDirectoryName</span><span class="p">(</span><span class="n">Path</span><span class="p">.</span><span class="nf">Combine</span><span class="p">(</span><span class="n">extractFolderPath</span><span class="p">,</span> <span class="n">zipArchiveEntry</span><span class="p">.</span><span class="n">FullName</span><span class="p">));</span>

              <span class="k">if</span> <span class="p">(!</span><span class="n">Directory</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">folderPath</span><span class="p">))</span>
                  <span class="n">Directory</span><span class="p">.</span><span class="nf">CreateDirectory</span><span class="p">(</span><span class="n">folderPath</span><span class="p">);</span>

              <span class="n">zipArchiveEntry</span><span class="p">.</span><span class="nf">ExtractToFile</span><span class="p">(</span><span class="n">Path</span><span class="p">.</span><span class="nf">Combine</span><span class="p">(</span><span class="n">extractFolderPath</span><span class="p">,</span> <span class="n">zipArchiveEntry</span><span class="p">.</span><span class="n">FullName</span><span class="p">));</span>
          <span class="p">}</span>
          <span class="k">catch</span>
          <span class="p">{</span>
              <span class="k">throw</span><span class="p">;</span>
          <span class="p">}</span>
      <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
    <ul>
      <li>압축 해제는 간단하게 zip파일의 경로를 ZipArchive로 읽어들여서 안에 있는 항목(entry)를 순환하며 확장메서드인 ExtractToFile를 이용하여 지정경로에 파일을 쓴다.</li>
    </ul>
  </li>
  <li>사용
    <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
<span class="p">{</span>
  <span class="kt">var</span> <span class="n">contentsPath</span> <span class="p">=</span> <span class="s">@"Sample"</span><span class="p">;</span>
  <span class="kt">var</span> <span class="n">zipPath</span> <span class="p">=</span> <span class="n">Path</span><span class="p">.</span><span class="nf">Combine</span><span class="p">(</span><span class="n">contentsPath</span><span class="p">,</span> <span class="s">"sample.zip"</span><span class="p">);</span>

  <span class="n">Zip</span><span class="p">.</span><span class="nf">CreateZip</span><span class="p">(</span><span class="n">contentsPath</span><span class="p">,</span> <span class="n">zipPath</span><span class="p">,</span> <span class="s">"txt"</span><span class="p">);</span>
  <span class="n">Zip</span><span class="p">.</span><span class="nf">ExtractZip</span><span class="p">(</span><span class="n">zipPath</span><span class="p">,</span> <span class="n">Path</span><span class="p">.</span><span class="nf">Combine</span><span class="p">(</span><span class="n">contentsPath</span><span class="p">,</span> <span class="s">"zipFolder"</span><span class="p">));</span>
<span class="p">}</span> 
</code></pre></div>    </div>
  </li>
  <li>
    <p>샘플
<a href="http://localhost:4000/images/posts/2021-04-16/sample.png"><img src="http://localhost:4000/images/posts/2021-04-16/sample.png" alt="sample" /></a></p>
  </li>
  <li>결과
<a href="http://localhost:4000/images/posts/2021-04-16/result.png"><img src="http://localhost:4000/images/posts/2021-04-16/result.png" alt="result" /></a></li>
</ul>

<h2 id="reference">Reference</h2>

<p><a href="https://docs.microsoft.com/ko-kr/dotnet/api/system.io.compression.ziparchive?redirectedfrom=MSDN&amp;view=net-5.0" target="_blank">ZipArchive Class</a></p>
:ET