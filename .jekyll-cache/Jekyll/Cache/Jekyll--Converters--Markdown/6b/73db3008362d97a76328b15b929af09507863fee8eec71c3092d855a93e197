I"C<h2 id="c-finalizer"><center>C# Finalizer</center></h2>

<hr />

<p>Finalizer</p>
<ul>
  <li>c#의 메모리 관리는 CLR의 가비지 컬렉터로 관리가 되는데, 전부 그런 것은 아니다.</li>
  <li>파일 IO, DB Connection 등 관리되지 않는 메모리 등을 사용한느 경우 이 자원들은 CLR에 의해 자동으로 메모리가 해제되지 않는다.</li>
  <li>따라서 이러한 경우에는 개발자들이 직접 해제를 해주어야하는데, C++과 같이 Delete로 명시 해줄 수 없기 떄문에 CLR에서는 Finalizer라는 기법을 제공한다.</li>
</ul>

<p>Finalizer 정의</p>
<ul>
  <li>Finalizer는 생성자와 같이 클래스의 특수 메서드로 분류되는 메서드이다.</li>
  <li>리턴 타입 및 파라미터 타입은 없으며 다음과 같이 정의한다. (<code class="language-plaintext highlighter-rouge">~</code> 키워드와 클래스명을 사용)
    <div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Foo</span>
<span class="p">{</span>
  <span class="p">~</span><span class="nf">Foo</span><span class="p">()</span>
  <span class="p">{</span>

  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </li>
</ul>

<p>Finalizer 호출 시점</p>
<ul>
  <li>Finalizer 메서드는 GC에 의해 객체가 제거될 때 호출이되며 명시적으로 호출은 불가능하다.</li>
  <li>GC의 호출 주기는 알 수 없으므로, Finalizer 메서드가 호출되는 시점도 불명확하다.</li>
</ul>

:ET